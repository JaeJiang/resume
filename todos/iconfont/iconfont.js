;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-daibanshixiang" viewBox="0 0 1177 1024">' +
    '' +
    '<path d="M165.127472 0l0 1024 32.631795 0 677.760257 0 209.107162 0L1084.626686 571.631879l0-555.631997L1084.626686 0 165.127472 0zM420.851053 759.58939l0 102.610727 0 5.698836-135.094696 0 0-5.698836 0-102.610727 0-5.698836L420.851053 753.890554 420.851053 759.58939zM549.21515 869.141897c-31.25611 0-56.597679-25.800131-56.597679-57.627934 0-31.826295 25.341569-57.623409 56.597679-57.623409 31.260635 0 56.597679 25.797114 56.597679 57.623409C605.814337 843.341766 580.475785 869.141897 549.21515 869.141897zM730.9504 869.141897c-31.25611 0-56.597679-25.800131-56.597679-57.627934 0-31.826295 25.341569-57.623409 56.597679-57.623409 31.260635 0 56.597679 25.797114 56.597679 57.623409C787.548079 843.341766 762.209527 869.141897 730.9504 869.141897zM912.684142 869.141897c-31.25611 0-56.597679-25.800131-56.597679-57.627934 0-31.826295 25.341569-57.623409 56.597679-57.623409 31.260635 0 56.597679 25.797114 56.597679 57.623409C969.281821 843.341766 943.943269 869.141897 912.684142 869.141897zM969.281821 458.309814l0 102.610727 0 5.698836L285.756357 566.619377l0-5.698836 0-102.610727 0-5.698836 683.525464 0L969.281821 458.309814zM969.281821 157.030238l0 102.610727 0 5.698836L285.756357 265.339801l0-5.698836 0-102.610727 0-5.698836 683.525464 0L969.281821 157.030238z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-yibanshixiang" viewBox="0 0 1161 1024">' +
    '' +
    '<path d="M275.16041 442.405158 285.48416 442.405158C372.203657 442.405158 446.534656 473.376406 510.541906 535.318903 572.484403 597.261404 603.455652 671.5924 603.455652 760.376648 603.455652 847.096146 572.484403 921.427145 510.541906 983.369643L510.541906 985.434392C498.132756 995.758141 485.764905 1008.146644 471.311657 1016.405644L1059.765391 1016.405644C1113.448892 1016.405644 1140.290639 989.563894 1142.355388 940.009895L1142.355388 258.642411C1142.355388 223.541662 1127.90214 196.699912 1096.930891 171.922913L960.657394 50.102666C944.139394 31.519916 921.427145 23.260917 896.629497 25.325666L337.082262 25.325666C297.852012 27.390416 277.204513 48.037916 275.139763 87.268165L275.139763 442.405158 275.16041 442.405158ZM1018.470393 211.153162 1018.470393 293.74316 522.930405 293.74316 522.930405 211.153162 1018.470393 211.153162 1018.470393 211.153162ZM399.045407 190.505662C415.563407 190.505662 430.016655 196.699912 442.405158 209.088412 454.814304 221.476912 460.987907 235.930161 460.987907 252.448161 460.987907 271.030911 454.793656 285.48416 442.405158 295.80791 430.016655 308.19641 415.563407 314.390659 399.045407 314.390659 380.462657 314.390659 366.009409 308.19641 353.620908 295.80791 343.297159 285.48416 337.102909 271.030911 337.102909 252.448161 337.102909 235.930161 343.297159 221.476912 353.620908 209.088412 366.009409 196.699912 380.462657 190.505662 399.045407 190.505662L399.045407 190.505662ZM688.110401 706.693151C686.045652 671.5924 677.786651 644.75065 667.462902 624.103151L1018.470393 624.103151 1018.470393 706.693151 688.110401 706.693151 688.110401 706.693151ZM667.462902 913.168145C679.851401 886.326395 688.110401 859.484645 688.110401 830.578145L1018.470393 830.578145 1018.470393 913.168145 667.462902 913.168145 667.462902 913.168145ZM522.930405 417.628157 1018.470393 417.628157 1018.470393 500.218156 605.520401 500.218156C584.872902 465.117406 555.966403 438.275656 522.930405 417.628157ZM282.355827 500.218156C227.277936 500.218156 180.359732 514.497608 137.521371 543.056514 129.361684 549.176282 121.181597 555.296048 113.042308 563.455734 108.962465 567.535578 104.882621 571.615423 100.782378 575.695264 98.742456 577.735188 96.722933 579.775109 94.662612 581.81503 47.744408 630.773156 25.325666 687.890971 25.325666 755.208393 25.325666 824.56574 49.78433 881.683552 94.662612 930.641678 96.722933 932.681598 98.742456 934.721522 100.782378 936.761443 137.521371 973.480038 182.379254 997.9591 231.33738 1006.118789 247.656755 1010.198634 263.976131 1012.238554 282.335428 1012.238554 351.692773 1012.238554 410.850509 985.719569 461.848556 936.761443 474.108488 922.481992 486.32762 910.242458 496.527227 895.963006 523.046212 855.164566 537.325667 808.246364 537.325667 755.208393 537.325667 704.210347 523.046212 657.292141 496.527227 616.493705 486.32762 602.21425 474.088086 587.934799 461.848556 575.695264 416.970274 530.816983 365.972227 506.337922 308.854413 502.258077 298.675202 500.218156 290.515515 500.218156 282.355827 500.218156ZM122.492504 599.743764C162.194959 562.376752 206.56829 541.357804 257.947937 536.686927 264.954252 534.35149 274.296006 534.35149 281.302322 534.35149 290.644076 534.35149 297.650391 534.35149 306.992145 536.686927 356.059708 541.357804 400.409685 562.376752 437.800055 599.743764 482.150031 641.781658 503.192334 695.496745 503.192334 756.218146 503.192334 819.274984 482.173385 870.654631 437.800055 915.027961 395.762162 957.065854 344.382516 978.084803 281.325676 978.084803 220.604275 978.084803 166.88919 957.065854 122.515858 915.027961 80.477966 870.654631 59.459019 819.274984 59.459019 756.218146 59.435665 695.496745 80.454611 641.781658 122.492504 599.743764L122.492504 599.743764ZM254.512911 809.930646 192.570412 768.635648 151.275414 830.578145 233.865411 892.520646 295.80791 892.520646 419.692906 686.045652 357.750409 644.75065 254.512911 809.930646 254.512911 809.930646Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-shixiang" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M834.56 51.712 189.44 51.712c-50.688 0-91.648 40.96-91.648 91.648L97.792 880.64c0 50.176 40.96 91.648 91.648 91.648l645.12 0c50.688 0 91.648-40.96 91.648-91.648L926.208 143.36C926.72 92.672 885.248 51.712 834.56 51.712zM307.712 260.608l390.656 0c24.576 0 44.032 19.456 44.032 44.544 0 24.576-19.968 44.544-44.032 44.544L307.712 349.696c-24.576 0-44.032-19.456-44.032-44.544C263.168 280.576 283.136 260.608 307.712 260.608zM585.728 721.408l-276.48 0c-25.6 0-46.08-20.48-46.08-46.08 0-25.6 20.992-46.08 46.08-46.08l276.48 0c25.6 0 46.08 20.48 46.08 46.08C631.808 700.928 610.816 721.408 585.728 721.408zM714.752 537.088 309.248 537.088c-25.6 0-46.08-20.48-46.08-46.08 0-25.6 20.992-46.08 46.08-46.08l405.504 0c25.6 0 46.08 20.48 46.08 46.08C760.832 516.608 739.84 537.088 714.752 537.088z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)